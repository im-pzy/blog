<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>其名为碰</title>
  
  <subtitle>技术、知识、分享 | 学习是一种习惯</subtitle>
  <link href="https://impzy.cn/atom.xml" rel="self"/>
  
  <link href="https://impzy.cn/"/>
  <updated>2025-06-09T14:35:30.822Z</updated>
  <id>https://impzy.cn/</id>
  
  <author>
    <name>碰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://impzy.cn/2025/06/09-22.html"/>
    <id>https://impzy.cn/2025/06/09-22.html</id>
    <published>2025-06-09T14:35:30.822Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<p>局域网文件互传方案</p><p>Windows之间：就近共享</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;局域网文件互传方案&lt;/p&gt;
&lt;p&gt;Windows之间：就近共享&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>记录一次更换笔记本电脑电池</title>
    <link href="https://impzy.cn/2025/02/13-19.html"/>
    <id>https://impzy.cn/2025/02/13-19.html</id>
    <published>2025-02-13T11:49:31.659Z</published>
    <updated>2025-02-13T11:49:35.689Z</updated>
    
    <content type="html"><![CDATA[<p>从大四到现在用了四年的笔记本(Dell Inspiron 5370)，电池终于顶不住了，只要一拔下电源，电量就开始蹭蹭蹭下降。按理说可以买一台新的笔记本了，因为这台笔记本并不是大四才购置的，实际年龄得有个7、8岁高龄了，在我上大学前就存在了，但是我也不想买新的，一是平时也就是用来写写代码，完全够用，二是现在的笔记本感觉性价比都不高，都是在割韭菜，三是这台笔记本的尺寸(13寸)、重量、手感、接口（两个USB口、一个MicroSD口、一个HDMI口、一个Type-C口）等，综合体验我觉得很满意。</p><p>于是今天在京东上购买了一块代替电池，说干就干，这里得表扬京东物流速度，上午买下午就到货了。</p><p><img src="https://cdn.impzy.cn/v2-553f0c9380c727a752a3dc0a13d3a979_1440w.jpg" alt="https://cdn.impzy.cn/v2-553f0c9380c727a752a3dc0a13d3a979_1440w.jpg"></p><blockquote><p>电池品牌叫极川</p></blockquote><p>打开送了一把小螺丝刀，还带各种刀头，做工也还不错。</p><p><img src="https://cdn.impzy.cn/v2-9ae78830cd0ea468e492a4f6fd506675_1440w.jpg" alt="https://cdn.impzy.cn/v2-9ae78830cd0ea468e492a4f6fd506675_1440w.jpg"></p><p>拆开笔记本，原来的电池其实也没有鼓包，但是就是寿命不行了。</p><p><img src="https://cdn.impzy.cn/v2-62d2b111f6586675d5152882312e8327_1440w.jpg" alt="https://cdn.impzy.cn/v2-62d2b111f6586675d5152882312e8327_1440w.jpg"></p><p>拔线的时候要多注意，电池上的那端不太好拔出来，可以先带线把电池拆下来，再单独去拔掉电池端接线。同时还要注意下边有一根排线。</p><p><strong>完工：</strong></p><p><img src="https://cdn.impzy.cn/v2-5777532c71b5c6f0a94e534e30f249b5_1440w.jpg" alt="https://cdn.impzy.cn/v2-5777532c71b5c6f0a94e534e30f249b5_1440w.jpg"></p><p><strong>成功开<del>激</del>机：</strong></p><p><img src="https://cdn.impzy.cn/v2-c8c96fc60929fd57871b9b3100bee7d8_1440w.jpg" alt="https://cdn.impzy.cn/v2-c8c96fc60929fd57871b9b3100bee7d8_1440w.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从大四到现在用了四年的笔记本(Dell Inspiron 5370)，电池终于顶不住了，只要一拔下电源，电量就开始蹭蹭蹭下降。按理说可以买一台新的笔记本了，因为这台笔记本并不是大四才购置的，实际年龄得有个7、8岁高龄了，在我上大学前就存在了，但是我也不想买新的，一是平时也就</summary>
      
    
    
    
    <category term="爱瞎折腾" scheme="https://impzy.cn/categories/%E7%88%B1%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>【Python教程】json模块</title>
    <link href="https://impzy.cn/2024/09/25-21.html"/>
    <id>https://impzy.cn/2024/09/25-21.html</id>
    <published>2024-09-25T13:16:00.000Z</published>
    <updated>2025-02-12T15:33:31.687Z</updated>
    
    <content type="html"><![CDATA[<p>该模块可以实现文件&#x2F;字符串类型的json对象、python对象互相转换</p><ul><li>查看框架版本：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json._version_</span><br></pre></td></tr></table></figure><h1 id="一、json转换为python对象"><a href="#一、json转换为python对象" class="headerlink" title="一、json转换为python对象"></a>一、json转换为python对象</h1><p><strong>转换类型对应表：</strong></p><table><thead><tr><th>json类型</th><th>python对象类型</th></tr></thead><tbody><tr><td>object</td><td>dict</td></tr><tr><td>array</td><td>list</td></tr><tr><td>string</td><td>str</td></tr><tr><td>number(int)</td><td>int, long</td></tr><tr><td>number(float)</td><td>float</td></tr><tr><td>true</td><td>True</td></tr><tr><td>false</td><td>False</td></tr><tr><td>null</td><td>None</td></tr></tbody></table><h2 id="1-json-load"><a href="#1-json-load" class="headerlink" title="1.json.load"></a>1.json.load</h2><p>将json文件对象转换为python对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">&quot;test.json&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.load(f)</span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><ul><li>test.json文件中内容为：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>代码：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.json&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line"><span class="comment"># &#123;&#x27;username&#x27;: &#x27;admin&#x27;, &#x27;password&#x27;: &#x27;123&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="2-json-loads"><a href="#2-json-loads" class="headerlink" title="2.json.loads"></a>2.json.loads</h2><p>将包含json数据的字符串转换为python对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json.loads(s,encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>s还可以是bytes和bytearray</p></blockquote><p><strong>例如：</strong></p><ul><li>s是str</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">jsonData = <span class="string">&#x27;&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;&#x27;</span></span><br><span class="line">text = json.loads(jsonData)</span><br><span class="line"><span class="built_in">print</span>(text)</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line"><span class="comment"># &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3, &#x27;d&#x27;: 4, &#x27;e&#x27;: 5&#125;</span></span><br><span class="line"></span><br><span class="line">jsonData = <span class="string">&#x27;&quot;123&quot;&#x27;</span></span><br><span class="line">text = json.loads(jsonData)</span><br><span class="line"><span class="built_in">print</span>(text)</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line"><span class="comment"># 123</span></span><br></pre></td></tr></table></figure><h1 id="二、python对象转换为json"><a href="#二、python对象转换为json" class="headerlink" title="二、python对象转换为json"></a>二、python对象转换为json</h1><p><strong>转换类型对应表：</strong></p><table><thead><tr><th>python对象类型</th><th>json类型</th></tr></thead><tbody><tr><td>dict</td><td>object</td></tr><tr><td>list, tuple</td><td>array</td></tr><tr><td>str</td><td>string</td></tr><tr><td>int, long, float</td><td>number</td></tr><tr><td>True</td><td>true</td></tr><tr><td>False</td><td>false</td></tr><tr><td>None</td><td>none</td></tr></tbody></table><h2 id="1-json-dump"><a href="#1-json-dump" class="headerlink" title="1.json.dump"></a>1.json.dump</h2><p>将python对象转换成json文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json.dump(obj, filestream, indent=None, separators=None, sort_keys=False)</span><br></pre></td></tr></table></figure><ul><li>indent指定缩进：</li></ul><ol><li>indent为正整数或者字符串(如<code>&quot;#&quot;</code>, <code>&quot;\t&quot;</code>等)时，用于美化缩进</li><li>indent为<code>0</code>、<code>负整数</code>、<code>&quot;&quot;</code>时，缩进为0，只换行</li><li>indent为<code>None</code>时，采用最紧凑表达</li></ol><ul><li>separators指定分隔符：separators默认为<code>(&quot;, &quot;, &quot;: &quot;)</code>，当indent被指定（涉及换行时），separators默认为<code>(&quot;,&quot;, &quot;: &quot;)</code>，即逗号后少了个空格</li><li>sort_keys指定是否按照键排序</li></ul><p><strong>例如：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;<span class="string">&quot;China&quot;</span>: <span class="string">&quot;Beijing&quot;</span>, <span class="string">&quot;Japan&quot;</span>: <span class="string">&quot;Tokyo&quot;</span>, <span class="string">&quot;Russia&quot;</span>: <span class="string">&quot;Moscow&quot;</span>, <span class="string">&quot;North Korea&quot;</span>: <span class="string">&quot;Pyongyang&quot;</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.json&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.dump(data,f,indent=<span class="number">2</span>,separators=(<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;:&#x27;</span>),sort_keys=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   &quot;China&quot;:&quot;Beijing&quot;;</span></span><br><span class="line"><span class="comment">#   &quot;Japan&quot;:&quot;Tokyo&quot;;</span></span><br><span class="line"><span class="comment">#   &quot;North Korea&quot;:&quot;Pyongyang&quot;;</span></span><br><span class="line"><span class="comment">#   &quot;Russia&quot;:&quot;Moscow&quot;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><h2 id="2-json-dumps"><a href="#2-json-dumps" class="headerlink" title="2.json.dumps"></a>2.json.dumps</h2><p>将python对象转换成json字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json.dumps(obj, indent=<span class="literal">None</span>, separators=<span class="literal">None</span>, sort_keys=<span class="literal">False</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data = [&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;d&#x27;</span>:<span class="number">4</span>,<span class="string">&#x27;e&#x27;</span>:<span class="number">5</span>&#125;]</span><br><span class="line">data_new = json.dumps(data)</span><br><span class="line"><span class="built_in">print</span>(data_new)</span><br><span class="line"><span class="comment"># 输出：[&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;]</span></span><br></pre></td></tr></table></figure><p>格式化输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = json.dumps(&#123;<span class="string">&#x27;b&#x27;</span>:<span class="string">&#x27;Runoob&#x27;</span>,<span class="string">&#x27;a&#x27;</span>:<span class="number">7</span>&#125;,sort_keys=<span class="literal">True</span>,indent=<span class="number">4</span>,separators=(<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;:&#x27;</span>))</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#     &quot;a&quot;:7,</span></span><br><span class="line"><span class="comment">#     &quot;b&quot;:&quot;Runoob&quot;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;该模块可以实现文件&amp;#x2F;字符串类型的json对象、python对象互相转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看框架版本：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="Python教程" scheme="https://impzy.cn/categories/Python%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>北京之旅感悟</title>
    <link href="https://impzy.cn/2024/06/02-20.html"/>
    <id>https://impzy.cn/2024/06/02-20.html</id>
    <published>2024-06-02T12:01:36.222Z</published>
    <updated>2024-06-02T13:44:51.359Z</updated>
    
    <content type="html"><![CDATA[    <div class="tag-plugin audio">    <iframe src="//music.163.com/outchain/player?type=2&id=2124385847&auto=0&height=32" frameborder="no" border="0" marginwidth="0" marginheight="0" width=288px height=52>    </iframe>    </div>    <p>前段时间由于工作安排到北京出差了一周，在这里记录一下我的感受。</p><p>北京，是一个让很多人都向往的地方。我从小在小县城长大，关于北京的一切只能在书本上了解到，那时感觉这一切离我都很遥远，然而现在一切就这样真切的出现在我眼前，有一种不可思议的感觉，二十四年来，靠着自己的努力，也算是免费到北京旅游了一圈。</p><p>第一站当然是天安门广场，遥想历史上曾经多少辉煌的时刻，都定格在自己现在脚下的这片土地上，打上历史的烙印，我循着历史的足迹，一边感受着祖国的疆土辽阔，一边回味着历史的无穷，我心中暗暗许下誓言，我定不会负这盛世所愿，将年轻热血抛洒在这祖国大地。</p><p><img src="https://cdn.impzy.cn/85bbbe238e4a3b65dbd8829c8b1ceb33.jpg" alt="https://cdn.impzy.cn/85bbbe238e4a3b65dbd8829c8b1ceb33.jpg"></p><p>有一个明显的感受是地铁换乘太远，城市建设和规划方面我更喜欢成都，当然这是由于它历史悠久、建设比较早，文化和历史感拉满。我走在街上时常会想，那时候的人们是怎样生活的，有一种时光交错的感觉，我走在皇宫的园林里，时常幻想皇帝大臣们与我在错位时空中擦肩而过。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.impzy.cn/Cache_-48a918b8fb77ad95.jpg" style="width:600px;"/></div></div><p>登上景山公园后，可以将故宫的全景收揽眼底。</p><p><img src="https://cdn.impzy.cn/acb02a43e6219160da88dfb9353dc43a.jpg" alt="https://cdn.impzy.cn/acb02a43e6219160da88dfb9353dc43a.jpg"></p><p>快速了解一个城市的最好方式就是坐公交随便转转。白天工作，下班后就到各个景点游玩，结束后坐公交回去，欣赏沿途的夜景和地方特色，回酒店后洗个澡，睡个好觉。</p><p>如果是换在以前，当我看完这些令人向往的风景后，我会强烈希望如果我能在北京生活或者工作就好了。一直以来我都是很向往大城市的，理想中的生活是在大城市的万家灯火中拥有属于自己的那一盏，但是随着成长，随着自己不断去过更多的地方，视野更宽广后，学会了辩证看待一些事物，发现其实再美的风景当自己亲眼见过后也会觉得不过如此，不然为什么当询问一些去过xxx旅游的朋友xxx怎么样时，他们的回答都会是xxx有什么好玩的呢。另外就是学会了务实收心，学会欣赏眼前的风景。北京的确很好，我的确很喜欢北京的胡同，幻想着自己要是能住在这里该多好，也很喜欢北京的逛不完的景点，但是北京的消费和生活节奏，以我的能力是难以承受的。我也不是很喜欢太拥挤的地方，当我询问过北京的房价后，我明白那是我一辈子都不可能承担的起的。人生的方向未必只有一种，好的风景看看就好了，更重要的是过好自己的剧本，每个人的剧本都有悲有喜，就像我现在，做好信息安全的本职，为网络安全奉献自己的一份力量就足矣。同时，好的风景也是可以通过奋斗得来的，但是前提还是得过好眼下的生活，为美好生活奋斗和做好准备，这样当美好的生活到来时，才能问心无愧，心满意足。</p>]]></content>
    
    
      
      
    <summary type="html">
    &lt;div class=&quot;tag-plugin audio&quot;&gt;
    &lt;iframe src=&quot;//music.163.com/outchain/player?type=2&amp;id=2124385847&amp;auto=0&amp;height=32&quot; frameborder=&quot;no&quot;</summary>
      
    
    
    
    <category term="思考感悟" scheme="https://impzy.cn/categories/%E6%80%9D%E8%80%83%E6%84%9F%E6%82%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>【Python教程】Office系列之CSV</title>
    <link href="https://impzy.cn/2024/02/28-18.html"/>
    <id>https://impzy.cn/2024/02/28-18.html</id>
    <published>2024-02-28T10:28:00.315Z</published>
    <updated>2025-02-12T15:31:14.463Z</updated>
    
    <content type="html"><![CDATA[<p><strong>数据表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name,age,sex,score</span><br><span class="line">Bob,20,male,90</span><br><span class="line">Tom,21,male,95</span><br><span class="line">Lucy,19,female,89</span><br><span class="line">Jim,22,male,99</span><br></pre></td></tr></table></figure><h1 id="csv-reader"><a href="#csv-reader" class="headerlink" title="csv.reader"></a>csv.reader</h1><p>组成每一行的row是列表</p><p><strong>生成文件对象</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">csv_file = <span class="built_in">open</span>(<span class="string">&#x27;new.csv&#x27;</span>,newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">reader = csv.reader(csv_file)</span><br><span class="line">header = <span class="built_in">next</span>(reader)<span class="comment"># 读取header</span></span><br><span class="line"><span class="built_in">print</span>(header)</span><br><span class="line">...</span><br><span class="line">csv_file.close()</span><br></pre></td></tr></table></figure><blockquote><p>如果没有指定newline&#x3D;’’，则嵌入引号中的换行符将无法正确解析（两行数据间会多一个空行）</p></blockquote><p><strong>遍历行数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历行数据</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:<span class="comment"># 此时将不包含header，row是list</span></span><br><span class="line">    <span class="built_in">print</span>(reader.line_num,row)<span class="comment"># 打印行号和行数据（行号从1开始，header是1）</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;,&#x27;</span>.join(row))<span class="comment"># 将row中的元素用&#x27;,&#x27;连起来</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等价于用列表推导式读取行数据</span></span><br><span class="line">[<span class="built_in">print</span>(row) <span class="keyword">for</span> row <span class="keyword">in</span> reader]</span><br></pre></td></tr></table></figure><p><strong>读取指定行数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历所有行，只输出符合条件的行</span></span><br><span class="line"><span class="keyword">for</span> index,row <span class="keyword">in</span> <span class="built_in">enumerate</span>(reader):</span><br><span class="line">    <span class="keyword">if</span> index <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>]:</span><br><span class="line">        <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切片法，但是数据较大的话不推荐</span></span><br><span class="line">rows = <span class="built_in">list</span>(reader)</span><br><span class="line"><span class="built_in">print</span>(rows[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p><strong>读取指定列数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用列表推导式解析列数据，打印第二列的数据</span></span><br><span class="line">col = [row[<span class="number">2</span>] <span class="keyword">for</span> row <span class="keyword">in</span> reader]</span><br><span class="line"><span class="built_in">print</span>(col)</span><br></pre></td></tr></table></figure><p><strong>读取指定单元格</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印数据区域第一行第二列的数据</span></span><br><span class="line">rows = <span class="built_in">list</span>(reader)</span><br><span class="line"><span class="built_in">print</span>(rows[<span class="number">0</span>][<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h1 id="csv-DictReader"><a href="#csv-DictReader" class="headerlink" title="csv.DictReader"></a>csv.DictReader</h1><p>组成每一行的row是字典</p><p><strong>生成文件对象</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">csv_file = <span class="built_in">open</span>(<span class="string">&#x27;new.csv&#x27;</span>,newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">reader = csv.DictReader(csv_file)</span><br><span class="line">header = reader.fieldnames<span class="comment"># 读取header</span></span><br><span class="line"><span class="built_in">print</span>(header)</span><br><span class="line">...</span><br><span class="line">csv_file.close()</span><br></pre></td></tr></table></figure><p><strong>遍历行数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不带key</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:<span class="comment"># 此时row是dict</span></span><br><span class="line">    <span class="built_in">print</span>(row[<span class="string">&#x27;name&#x27;</span>],row[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带key</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure><p><strong>读取指定行数据</strong></p><blockquote><p>和csv.reader一样</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历所有行，只输出符合条件的行</span></span><br><span class="line"><span class="keyword">for</span> index,row <span class="keyword">in</span> <span class="built_in">enumerate</span>(reader):</span><br><span class="line">    <span class="keyword">if</span> index <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>]:</span><br><span class="line">        <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切片法，但是数据较大的话不推荐</span></span><br><span class="line">rows = <span class="built_in">list</span>(reader)</span><br><span class="line"><span class="built_in">print</span>(rows[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p><strong>读取列数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    <span class="built_in">print</span>(row[<span class="string">&#x27;name&#x27;</span>])</span><br></pre></td></tr></table></figure><p><strong>读取单元格</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印数据区域第一行的name数据</span></span><br><span class="line">rows = <span class="built_in">list</span>(reader)</span><br><span class="line"><span class="built_in">print</span>(rows[<span class="number">0</span>][<span class="string">&#x27;name&#x27;</span>])</span><br></pre></td></tr></table></figure><h1 id="csv-writer"><a href="#csv-writer" class="headerlink" title="csv.writer"></a>csv.writer</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写入行数据</span></span><br><span class="line">csv_file = <span class="built_in">open</span>(<span class="string">&#x27;new.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">writer = csv.writer(csv_file)</span><br><span class="line">writer.writerow([<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;score&#x27;</span>])</span><br><span class="line">writer.writerow([<span class="string">&#x27;Coco&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;male&#x27;</span>,<span class="number">90</span>])</span><br><span class="line">writer.writerows([row1,row2])<span class="comment"># 多行写入数据</span></span><br><span class="line">csv_file.close()</span><br></pre></td></tr></table></figure><h1 id="csv-DictWriter"><a href="#csv-DictWriter" class="headerlink" title="csv.DictWriter"></a>csv.DictWriter</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">csv_file = <span class="built_in">open</span>(<span class="string">&#x27;new.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">fieldnames = [<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;score&#x27;</span>]<span class="comment"># header</span></span><br><span class="line">writer = csv.DictWriter(csv_file,fieldnames=fieldnames)</span><br><span class="line">writer.writeheader()</span><br><span class="line">writer.writerow(&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>,<span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;male&#x27;</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">90</span>&#125;)</span><br><span class="line">writer.writerows([&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">21</span>,<span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;male&#x27;</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">95</span>&#125;,&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Lucy&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">19</span>,<span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;female&#x27;</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">89</span>&#125;])</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;数据表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="Python教程" scheme="https://impzy.cn/categories/Python%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>QQ邮箱那些被你忽略的功能</title>
    <link href="https://impzy.cn/2024/02/23-19.html"/>
    <id>https://impzy.cn/2024/02/23-19.html</id>
    <published>2024-02-23T11:34:00.754Z</published>
    <updated>2024-05-09T16:07:40.300Z</updated>
    
    <content type="html"><![CDATA[<p>今天主要分享的是QQ邮箱，大家可能疑惑了，这玩意有啥好分享的，不就是个收发邮件的东西嘛。NoNoNo，如果你这样想，可就大错特错了，这款产品其实很良心的，里面有很多隐藏的实用功能，下面我给大家依次介绍介绍。</p><h2 id="一、QQ邮箱移动端"><a href="#一、QQ邮箱移动端" class="headerlink" title="一、QQ邮箱移动端"></a>一、QQ邮箱移动端</h2><p><img src="https://cdn.impzy.cn/v2-4696baa153efd2df522cfaac4ba71b57_r.jpg" alt="https://cdn.impzy.cn/v2-4696baa153efd2df522cfaac4ba71b57_r.jpg"></p><p>首先要说的就是QQ邮箱的移动端，我用过很多邮箱客户端，但大多数都要么广告连篇，要么VIP充钱至上，这还不说，关键是软件做的之臃肿。但是QQ邮箱移动端，真的就是一种给人很简洁的感觉，能让人使用的时候真切感受到这是一款用心制作的产品。</p><p><img src="https://cdn.impzy.cn/v2-96a1620aacfe18a94b9935f57734da5b_r.jpg" alt="https://cdn.impzy.cn/v2-96a1620aacfe18a94b9935f57734da5b_r.jpg"></p><h2 id="二、简历助手"><a href="#二、简历助手" class="headerlink" title="二、简历助手"></a><strong>二、简历助手</strong></h2><p>我记得在前年毕业的时候，很多朋友都问我怎么制作简历，有哪些网站，说自己找的网站五花八门，但都是同一种套路——到了导出PDF的时候就要收费了，甚至我看到还有同学用word来制作简历，最后展现出来的效果也不是很好。其实QQ邮箱就提供简历制作功能，而且简洁高效，制作出来的风格也是恰中HR的心怀。</p><p><img src="https://cdn.impzy.cn/v2-a8a4faec5fe5aa04101cd2874f495222_720w.webp" alt="https://cdn.impzy.cn/v2-a8a4faec5fe5aa04101cd2874f495222_720w.webp"></p><p>我们只需要在右侧各个模块中填写好自己的信息就可以了，如果不满意还可以自定义模块，最后系统会自动生成简历，就类似于这种：</p><p><img src="https://cdn.impzy.cn/v2-07cc1da328d68936ef8ec8e9bc3efa3d_720w.webp" alt="https://cdn.impzy.cn/v2-07cc1da328d68936ef8ec8e9bc3efa3d_720w.webp"></p><p>并且有两种版式可选：</p><p><img src="https://cdn.impzy.cn/v2-66ba43096358e40d8be4117ad001f609_720w.webp" alt="https://cdn.impzy.cn/v2-66ba43096358e40d8be4117ad001f609_720w.webp"></p><p>最后还可以导出为PDF，以及一键通过邮件发送：</p><p><img src="https://cdn.impzy.cn/v2-cb7c5d97520246d2222a21e6a166ce02_720w.webp" alt="https://cdn.impzy.cn/v2-cb7c5d97520246d2222a21e6a166ce02_720w.webp"></p><p>并且移动端也是可以在简历模块编辑的，方便随时查看、修改和发送。</p><h2 id="三、发票助手"><a href="#三、发票助手" class="headerlink" title="三、发票助手"></a><strong>三、发票助手</strong></h2><p>对于经常需要报销的同学来说，这个功能非常强大，和微信进行绑定后，通过邮件接收到的发票和微信发票助手中的发票会进行同步，两端都可以对发票进行管理，方便快捷。</p><p><img src="https://cdn.impzy.cn/v2-76437018442a33da4c6e33bdcdc4a8f3_720w.webp" alt="https://cdn.impzy.cn/v2-76437018442a33da4c6e33bdcdc4a8f3_720w.webp"></p><p>同时会自动对发票进行分类，还可以一键生成报销单，添加备注等。</p><h2 id="四、每日悦读"><a href="#四、每日悦读" class="headerlink" title="四、每日悦读"></a><strong>四、每日悦读</strong></h2><p>里面的文章都是经过精选的高质量文章，每天都会进行更新，包含社会热点、人物故事、科技知识等等，有点类似于杂志的感觉，帮助我们进行深度阅读思考，远离各种营销号的低质量文章，同时还可以在阅读中发现各种新的媒体号进行订阅，这个功能是越用感觉越好，文章也不多，每天抽个空余时间看看就能读完，还大有所获。</p><p><img src="https://cdn.impzy.cn/v2-5d5f8de6209206896ebcfab81032c20e_720w.webp" alt="https://cdn.impzy.cn/v2-5d5f8de6209206896ebcfab81032c20e_720w.webp"></p><h2 id="五、时光信使"><a href="#五、时光信使" class="headerlink" title="五、时光信使"></a><strong>五、时光信使</strong></h2><p>平时大家都很喜欢给未来的自己写一封信，有一个app就叫这个名字，但是总感觉这种活动对大多数同学来说可能一年才会有一次，为此专门下一个app显得很臃肿，而且之前我体验过，给自己写的3天后的信，竟然到现在为止都杳无音信。QQ邮箱就很好的解决了这个问题，每年的12月结尾，QQ邮箱都会开启一个临时通道，在指定的时间段内，我们可以给一年后的自己写一封信，在第二年的时候会发送到自己的邮箱内。同时要注意的是，这封信一旦发出去，是没有办法撤回的。</p><p><img src="https://cdn.impzy.cn/v2-52bc3905fb20b9d5b9571fccef038a25_r.png" alt="https://cdn.impzy.cn/v2-52bc3905fb20b9d5b9571fccef038a25_r.png"></p><h2 id="六、贺卡"><a href="#六、贺卡" class="headerlink" title="六、贺卡"></a><strong>六、贺卡</strong></h2><p>这也是我很喜欢QQ邮箱的一个地方，板块里面设置了各种各样的精美贺卡，可以自定义祝福语，带上署名、时间和位置，非常具有纪念意义。而且在各个节日的时候，会有专属的节日贺卡，比如明天是元宵节，今天就已经可以看到元宵节的贺卡了。</p><p><img src="https://cdn.impzy.cn/v2-fd0b0729e3eedd8ab9b99229461983ba_720w.webp" alt="https://cdn.impzy.cn/v2-fd0b0729e3eedd8ab9b99229461983ba_720w.webp"></p><p><img src="https://cdn.impzy.cn/v2-c9d8f7076d1ec3387a90ef4ac2dd9055_720w.webp" alt="https://cdn.impzy.cn/v2-c9d8f7076d1ec3387a90ef4ac2dd9055_720w.webp"></p><p>而且在自己过生日的时候，QQ邮箱官方会发送一封精美的生日贺卡。</p><p><img src="https://cdn.impzy.cn/v2-60431fa41af29b60bb21d6ce671150e9_720w.webp" alt="https://cdn.impzy.cn/v2-60431fa41af29b60bb21d6ce671150e9_720w.webp"></p><h2 id="七、日历"><a href="#七、日历" class="headerlink" title="七、日历"></a><strong>七、日历</strong></h2><p>可以在日历功能中新建日程，到时间邮箱会自动发送邮件提醒，并且还可以添加自定义的日历，比如好友的生日、工作计划、排班日历等。如果将“好友生日”日历选中打开，将会在日历中根据QQ好友个人资料中填写的生日进行提醒。同时在移动端，还支持显示系统日历。</p><p><img src="https://cdn.impzy.cn/v2-f683443f3c9a8d7f71617ea8fea0cbff_720w.webp" alt="https://cdn.impzy.cn/v2-f683443f3c9a8d7f71617ea8fea0cbff_720w.webp"></p><h2 id="八、记事本"><a href="#八、记事本" class="headerlink" title="八、记事本"></a><strong>八、记事本</strong></h2><p>有点类似日记本，记录想法、文章、心情，支持记事分类，按月份归档。还支持将微信公众号中的文章一键导入到记事本中，如果不喜欢花里胡哨的记事本的朋友，非常值得推荐。另外，如果想要导出记事本中的内容，也是可以直接导出的。</p><p><img src="https://cdn.impzy.cn/v2-4b7c7c42326baffaef4274886bc8e3ba_720w.webp" alt="https://cdn.impzy.cn/v2-4b7c7c42326baffaef4274886bc8e3ba_720w.webp"></p><h2 id="九、在线文档"><a href="#九、在线文档" class="headerlink" title="九、在线文档"></a><strong>九、在线文档</strong></h2><p>可以创建word和excel文件，并且里面还有很多实用的模板，同时还支持从外部导入文件。</p><p><img src="https://cdn.impzy.cn/v2-d4ca0185560635a72dd5f09165f82431_720w.webp" alt="https://cdn.impzy.cn/v2-d4ca0185560635a72dd5f09165f82431_720w.webp"></p><p>创建完成后，支持通过邮件一键发送，还支持协作功能。</p><h2 id="十、微信收发邮件"><a href="#十、微信收发邮件" class="headerlink" title="十、微信收发邮件"></a><strong>十、微信收发邮件</strong></h2><p>在微信设置-通用-辅助功能中，打开QQ邮箱提醒功能，然后绑定QQ邮箱，就可以实现通过微信收发邮件了，同时还支持将微信聊天记录作为邮件发送出去。</p><p><img src="https://cdn.impzy.cn/v2-53434e1255dc49252addc95bb13c676a_720w.webp" alt="https://cdn.impzy.cn/v2-53434e1255dc49252addc95bb13c676a_720w.webp"></p><blockquote><p>以上提到的功能，如果在侧边栏找不到的话，需要在QQ邮箱-设置-体验室中打开。同时实验室中还有很多本文没有提到的功能，大家可以自行研究。</p></blockquote><p><img src="https://cdn.impzy.cn/v2-cb24221b95a1515d9ec7b92b38d05138_720w.webp" alt="https://cdn.impzy.cn/v2-cb24221b95a1515d9ec7b92b38d05138_720w.webp"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天主要分享的是QQ邮箱，大家可能疑惑了，这玩意有啥好分享的，不就是个收发邮件的东西嘛。NoNoNo，如果你这样想，可就大错特错了，这款产品其实很良心的，里面有很多隐藏的实用功能，下面我给大家依次介绍介绍。&lt;/p&gt;
&lt;h2 id=&quot;一、QQ邮箱移动端&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="实用工具" scheme="https://impzy.cn/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>php_exif.dll开启后仍然无法找到指定模块</title>
    <link href="https://impzy.cn/2021/12/18-00.html"/>
    <id>https://impzy.cn/2021/12/18-00.html</id>
    <published>2021-12-17T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<p>在php.ini中明明开启了php_exif.dll扩展，但是仍然找不到指定模块</p><p>实际上，开启exif扩展还有两个隐藏条件：</p><ol><li>开启mbstring</li><li>mbstring要先于exif加载（php.ini中把mbstring写到exif前面）</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在php.ini中明明开启了php_exif.dll扩展，但是仍然找不到指定模块&lt;/p&gt;
&lt;p&gt;实际上，开启exif扩展还有两个隐藏条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开启mbstring&lt;/li&gt;
&lt;li&gt;mbstring要先于exif加载（php.ini中把mbstrin</summary>
      
    
    
    
    <category term="Linux" scheme="https://impzy.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>C盘清理</title>
    <link href="https://impzy.cn/2021/12/03-00.html"/>
    <id>https://impzy.cn/2021/12/03-00.html</id>
    <published>2021-12-02T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-自带的磁盘清理"><a href="#1-自带的磁盘清理" class="headerlink" title="1.自带的磁盘清理"></a>1.自带的磁盘清理</h2><p>两种方式进入：</p><p>①设置—系统—存储—临时文件</p><p>②控制面板—系统和安全—管理工具—释放磁盘空间</p><p>重点清理Windows更新、回收站、优化传递文件、缩略图</p><p>此外，Windows更新目录：C:\Windows\SoftwareDistribution\Download目录下是Windows更新下载的文件</p><h2 id="2-重设媒体文件夹和应用的位置"><a href="#2-重设媒体文件夹和应用的位置" class="headerlink" title="2.重设媒体文件夹和应用的位置"></a>2.重设媒体文件夹和应用的位置</h2><p>资源管理器中，文档、下载、图片、视频、音乐、桌面六大文件夹的默认位置都是在C盘，以及WindowsAPP也是默认安装到C盘，将他们移动到非C盘会省出大量空间。</p><p>①设置—系统—存储—更多存储设置—更改新内容的保存位置</p><p>将里面的所有选项设置为非C盘</p><p>②到资源管理器中，分别选中这六大文件夹，然后右键单击选中属性，点击位置选项卡，点击移动，选择一个合适的位置，然后点击确定，这个时候系统就会自动将已存在的文件移动过去</p><p>如果移动过程中卡住或者失败，找到C:\Users\你的用户名\，这几个文件夹分别是Documents、Downloads、Pictures、Videos、Music、Desktop，继续移动即可</p><h2 id="3-关闭虚拟内存和系统保护"><a href="#3-关闭虚拟内存和系统保护" class="headerlink" title="3.关闭虚拟内存和系统保护"></a>3.关闭虚拟内存和系统保护</h2><p>虚拟内存的占用空间大小可以在设置—系统—存储—系统和保留空间中找到</p><p>位置：计算机—右键属性—高级系统设置</p><p>关闭虚拟内存：</p><p>①选择高级选项卡</p><p>②选择性能中的设置</p><p>③进入高级选项卡</p><p>④选择虚拟内存中的更改</p><p>⑤取消自动管理，选中无分页文件</p><p>⑥点击设置，弹出提示，点击确定</p><p>关闭系统保护：</p><p>①切换到系统保护选项卡</p><p>②点击C盘—配置</p><p>③禁用系统保护、最大使用量调节为0、并删除所有还原点</p><p>④确定，然后一路确定下去</p><h2 id="4-关闭系统休眠"><a href="#4-关闭系统休眠" class="headerlink" title="4.关闭系统休眠"></a>4.关闭系统休眠</h2><h2 id="5-软件搬家"><a href="#5-软件搬家" class="headerlink" title="5.软件搬家"></a>5.软件搬家</h2><h2 id="6-利用PE创建软链接"><a href="#6-利用PE创建软链接" class="headerlink" title="6.利用PE创建软链接"></a>6.利用PE创建软链接</h2><p>这个方法以后再介绍，思路就是，把C盘中的User目录创建软链接指向D盘，这样用户数据就全部存到D盘去了</p><blockquote><p>如果以上有些路径按照教程找不到，可以直接按Win+S进行搜索</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-自带的磁盘清理&quot;&gt;&lt;a href=&quot;#1-自带的磁盘清理&quot; class=&quot;headerlink&quot; title=&quot;1.自带的磁盘清理&quot;&gt;&lt;/a&gt;1.自带的磁盘清理&lt;/h2&gt;&lt;p&gt;两种方式进入：&lt;/p&gt;
&lt;p&gt;①设置—系统—存储—临时文件&lt;/p&gt;
&lt;p&gt;②控制面板</summary>
      
    
    
    
    <category term="Windows" scheme="https://impzy.cn/categories/Windows/"/>
    
    
  </entry>
  
  <entry>
    <title>字体格式转换基本教程</title>
    <link href="https://impzy.cn/2021/11/04-00.html"/>
    <id>https://impzy.cn/2021/11/04-00.html</id>
    <published>2021-11-03T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<p>手上有otf和ttf格式的字体，但是需要将其放到网站中使用，那就要转换城woff2格式来减小体积，所以找到了一些工具，在这里记录一下</p><h2 id="一、ttf2woff2（ttf转woff2）"><a href="#一、ttf2woff2（ttf转woff2）" class="headerlink" title="一、ttf2woff2（ttf转woff2）"></a>一、ttf2woff2（ttf转woff2）</h2><p>开源地址：<a href="https://github.com/nfroidure/ttf2woff2">https://github.com/nfroidure/ttf2woff2</a></p><blockquote><p>这是一个NodeJS包，需要提前准备好NodeJS环境</p></blockquote><ol><li><p>安装：<code>npm i ttf2woff2 -g</code></p></li><li><p>使用</p><p>Linux：<code>cat xxx.ttf | ttf2woff2 &gt; xxx.woff2</code></p><p>Windows(PowerShell中)：<code>Start-Process -NoNewWindow -Wait ttf2woff2.cmd -RedirectStandardInput font.ttf -RedirectStandardOutput font.woff2</code>或者<code>start-process -nnw -wait ttf2woff2.cmd -rsi font.ttf -rso font.woff2</code></p></li></ol><p>转换时间稍长，需要耐心等待</p><p>也可通过调用API来使用，详情参考软件文档</p><h2 id="二、otf2ttf（otf转ttf）"><a href="#二、otf2ttf（otf转ttf）" class="headerlink" title="二、otf2ttf（otf转ttf）"></a>二、otf2ttf（otf转ttf）</h2><p>开源地址：<a href="https://github.com/awesometoolbox/otf2ttf">https://github.com/awesometoolbox/otf2ttf</a></p><blockquote><p>这是一个Python包，需要提前准备好Python环境</p></blockquote><ol><li>安装：<code>pip install otf2ttf</code></li><li>使用：<code>otf2ttf xxx.ttf</code></li></ol><h2 id="三、其他工具"><a href="#三、其他工具" class="headerlink" title="三、其他工具"></a>三、其他工具</h2><h3 id="1-woff2"><a href="#1-woff2" class="headerlink" title="1.woff2"></a>1.woff2</h3><p><a href="https://github.com/google/woff2">https://github.com/google/woff2</a></p><p>谷歌出品，C++编写，可以实现ttf和woff2互转</p><h3 id="2-woff2otf"><a href="#2-woff2otf" class="headerlink" title="2.woff2otf"></a>2.woff2otf</h3><p><a href="https://github.com/hanikesn/woff2otf">https://github.com/hanikesn/woff2otf</a></p><p>Python编写，可以实现woff转otf</p><p>还有其他工具的话，后期再来更新</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;手上有otf和ttf格式的字体，但是需要将其放到网站中使用，那就要转换城woff2格式来减小体积，所以找到了一些工具，在这里记录一下&lt;/p&gt;
&lt;h2 id=&quot;一、ttf2woff2（ttf转woff2）&quot;&gt;&lt;a href=&quot;#一、ttf2woff2（ttf转woff2）&quot; </summary>
      
    
    
    
    <category term="效率工具" scheme="https://impzy.cn/categories/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>【软件说】ExifTool</title>
    <link href="https://impzy.cn/2021/10/24-00.html"/>
    <id>https://impzy.cn/2021/10/24-00.html</id>
    <published>2021-10-23T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.821Z</updated>
    
    <content type="html"><![CDATA[<p>Exif：Read and write meta information</p><p>一款对文件属性查看的修改的神器</p><blockquote><p>exiftool：<a href="https://exiftool.org/">https://exiftool.org/</a><br>exiftoolGUI：<a href="https://exiftool.org/forum/index.php?topic=2750.0">https://exiftool.org/forum/index.php?topic=2750.0</a></p><p>（GUI应该不会更新了，GUI基于Win7开发，不能保证向后兼容）</p></blockquote><h2 id="一、Exiftool使用方式："><a href="#一、Exiftool使用方式：" class="headerlink" title="一、Exiftool使用方式："></a>一、Exiftool使用方式：</h2><ol><li><p>双击</p><p>查看文档</p></li><li><p>拖拽运行<br>可拖拽的对象包括文件、多个文件和文件夹，但是此时程序名就不能随意了，必须按照以下参数：</p></li></ol><table><thead><tr><th>可执行文件名</th><th>操作</th></tr></thead><tbody><tr><td>exiftool(-k).exe</td><td>Print meta information in window and pause before terminating.</td></tr><tr><td>exiftool(-k -a -u -g1 -w txt).exe</td><td>Generate output “.txt” files with detailed meta information.</td></tr><tr><td>exiftool(-k -o %d%f.xmp).exe</td><td>Generate sidecar “.xmp” files.</td></tr><tr><td>exiftool(-copyright&#x3D;’Phil Harvey’).exe</td><td>Add copyright information (and don’t pause before terminating).</td></tr></tbody></table><ol start="3"><li>或者可以将选项添加到可执行文件的快捷方式的目标属性中，与文件名中添加相比，好处有：<br> 1）可以创建不同的快捷方式，而无需多个可执行文件的副本<br> 2）可以提供快捷方式更有意义（和方便）的文件名。</li></ol><h2 id="二、ExiftoolGUI："><a href="#二、ExiftoolGUI：" class="headerlink" title="二、ExiftoolGUI："></a>二、ExiftoolGUI：</h2><p>GUI不会向任何其他地方写入内容或者写入注册表，所有设置都会写入GUI所在目录下ExifToolGUI.ini文件。</p><p>关于GUI中的jhead_jpegtran文件夹中的两个文件：用于JPG无损旋转，以及防止将JPG嵌入原始图像文件时需要旋转。</p><p>参考文献：<a href="https://raw.githubusercontent.com/exiftool/exiftool/master/html/ExifTool.pdf">ExifToll官方文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Exif：Read and write meta information&lt;/p&gt;
&lt;p&gt;一款对文件属性查看的修改的神器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;exiftool：&lt;a href=&quot;https://exiftool.org/&quot;&gt;https://exiftool</summary>
      
    
    
    
    <category term="软件说" scheme="https://impzy.cn/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>常用Linux源</title>
    <link href="https://impzy.cn/2021/10/14-00.html"/>
    <id>https://impzy.cn/2021/10/14-00.html</id>
    <published>2021-10-13T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu和Kali源</p><span id="more"></span><h2 id="Ubuntu源"><a href="#Ubuntu源" class="headerlink" title="Ubuntu源"></a>Ubuntu源</h2><h3 id="18-04（Bionic）"><a href="#18-04（Bionic）" class="headerlink" title="18.04（Bionic）"></a>18.04（Bionic）</h3><h4 id="x86架构"><a href="#x86架构" class="headerlink" title="x86架构"></a>x86架构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#中科大</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#清华源</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h4 id="arm架构"><a href="#arm架构" class="headerlink" title="arm架构"></a>arm架构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#清华源</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><h3 id="20-04（Focal）"><a href="#20-04（Focal）" class="headerlink" title="20.04（Focal）"></a>20.04（Focal）</h3><h4 id="x86结构"><a href="#x86结构" class="headerlink" title="x86结构"></a>x86结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#中科大</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#清华源</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h4 id="arm架构-1"><a href="#arm架构-1" class="headerlink" title="arm架构"></a>arm架构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#清华源</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse </span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse</span><br><span class="line">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h2 id="Kali源"><a href="#Kali源" class="headerlink" title="Kali源"></a>Kali源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#中科大</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#官方源</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Ubuntu和Kali源&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://impzy.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>解决epic无法登录</title>
    <link href="https://impzy.cn/2021/10/07-00.html"/>
    <id>https://impzy.cn/2021/10/07-00.html</id>
    <published>2021-10-06T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>epic登录的时候，出现登录按钮转圈的情况，导致无法登录</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>为hosts文件添加解析：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">104.16.168.131 hcaptcha.com</span><br><span class="line">104.16.168.131 newassets.hcaptcha.com</span><br><span class="line">104.16.168.131 imgs.hcaptcha.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h2&gt;&lt;p&gt;epic登录的时候，出现登录按钮转圈的情况，导致无法登录&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;</summary>
      
    
    
    
    <category term="Game" scheme="https://impzy.cn/categories/Game/"/>
    
    
  </entry>
  
  <entry>
    <title>HK1 BOX安装armbian</title>
    <link href="https://impzy.cn/2021/09/15-00.html"/>
    <id>https://impzy.cn/2021/09/15-00.html</id>
    <published>2021-09-14T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.821Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>刷写工具：Etcher</p><p>镜像地址（官方）：<a href="https://users.armbian.com/balbes150/arm-64/">https://users.armbian.com/balbes150/arm-64/</a></p><p>镜像地址（Flippy优化版）：<a href="https://www.right.com.cn/forum/thread-4076037-1-1.html">https://www.right.com.cn/forum/thread-4076037-1-1.html</a></p><p>救砖刷写工具：<a href="https://androidmtk.com/download-amlogic-usb-burning-tool">https://androidmtk.com/download-amlogic-usb-burning-tool</a></p><p>救砖软件需要的License：网上都有</p><p>Bionic  是Ubuntu 18.04编译的</p><p>Focal  是Ubuntu 20.04编译的</p><p>Buster  是Debian 10编译的</p><p>Bullseye  是Debian 11编译的</p></blockquote><h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><ol><li><p>使用Etcher刷写镜像到一个空U盘中</p></li><li><p>刷写完成后，将meson-sm1-hk1box-vontar-x3.dtb固件（网上到处都有）放入dtb\amlogic目录下</p></li><li><p>修改extlinux下的extlinux.conf，将不需要的代码给注释掉，只留下需要的dtb</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FDT /dtb/amlogic/meson-sm1-hk1box-vontar-x3.dtb</span><br><span class="line">#FDT /dtb/amlogic/meson-gxl-s905x-p212.dtb</span><br><span class="line">#FDT /dtb/amlogic/meson-gxm-q200.dtb</span><br><span class="line">#FDT /dtb/amlogic/meson-g12a-x96-max.dtb</span><br><span class="line">#FDT /dtb/amlogic/meson-g12b-odroid-n2.dtb</span><br><span class="line">APPEND root=LABEL=ROOTFS rootflags=data=writeback rw console=ttyAML0,115200n8 console=tty0 no_console_suspend consoleblank=0 fsck.fix=yes fsck.repair=yes net.ifnames=0</span><br></pre></td></tr></table></figure><p>（如果是Flippy的固件则修改boot目录下的uEnv.txt）</p></li><li><p>修改根目录下的u-boot-s905x2-s922文件名为u-boot.ext</p></li><li><p>用一根棉签塞进耳机孔抵住reset按钮，然后接通电源，直到成功进入系统</p></li><li><p>执行家目录下的install-to-emmc.sh，后面都按照提示进行，之后重启就刷好了</p></li></ol><h2 id="救砖"><a href="#救砖" class="headerlink" title="救砖"></a>救砖</h2><p>如果刷到bootloader都不能进入了，救砖吧</p><ol><li><p>刷写工具一定要安装，不能用便携版，不然没有驱动</p></li><li><p>安装好软件后去设备管理器中检查一下有没有libusb-win32 Usb Devices，如果没有还需要手动添加过时硬件</p></li><li><p>添加licence：这个没搞明白，反正按照网上来吧，说法众多，但是大意都是将licence文件添加到v2版本的文件夹中</p></li><li><p>对于连接的物理操作，我没研究明白，有人说必须拆机短接，也有人说接通电源就不用短接，还有人说按住reset，反正识别不上就几种都试试，接上USB后大概4-6s能够识别到设备。我记得我当时是先短接，然后按住reset再接通电源，再接上USB就是识别出来了。</p></li><li><p>连接好后如果遇到各种刷机问题，再次识别问题，先尝试重启软件</p></li></ol><p>（写的很糙，等我后面如果又搞成砖头了，再来更新经验）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;刷写工具：Etcher&lt;/p&gt;
&lt;p&gt;镜像地址（官方）：&lt;a href=&quot;https://users.armbian.com/balbes150/arm-64/&quot;&gt;https://users.armbian.com/balbes150/arm-64</summary>
      
    
    
    
    <category term="电视盒子" scheme="https://impzy.cn/categories/%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90/"/>
    
    
  </entry>
  
  <entry>
    <title>WSL迁移子系统安装目录</title>
    <link href="https://impzy.cn/2021/09/05-00.html"/>
    <id>https://impzy.cn/2021/09/05-00.html</id>
    <published>2021-09-04T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<p>下载LxRunOffline</p><p><a href="https://github.com/DDoSolitary/LxRunOffline/releases/">https://github.com/DDoSolitary/LxRunOffline/releases/</a></p><p>查看系统中已安装的wsl子系统：LxRunOffline l</p><p>转移：LxRunOffline m -n &lt;wsl子系统名称&gt; -d &lt;目的目录&gt;</p><p>查看wsl子系统路径：LxRunOffline di -n &lt;wsl子系统名称&gt;</p><p>查看默认wsl子系统：LxRunOffline gd</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下载LxRunOffline&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/DDoSolitary/LxRunOffline/releases/&quot;&gt;https://github.com/DDoSolitary/LxRunOffline/release</summary>
      
    
    
    
    <category term="WSL" scheme="https://impzy.cn/categories/WSL/"/>
    
    
  </entry>
  
  <entry>
    <title>【软件说】ScreenToGif</title>
    <link href="https://impzy.cn/2021/01/07-08.html"/>
    <id>https://impzy.cn/2021/01/07-08.html</id>
    <published>2021-01-07T00:00:00.000Z</published>
    <updated>2024-03-27T13:19:25.996Z</updated>
    
    <content type="html"><![CDATA[<p>经过了将近一个月的疯狂复习，今天也终于考完了，考完了倒数第二门，最后一门13号考，趁这个空档期，出一期软件推荐。鉴于大家平时对GIF编辑的需求比较大，之前还有好几个朋友让我帮他们改GIF动图，相信做动态表情包绝对少不了一款优秀的GIF编辑工具（正经的，谁还做表情包，这种好用的东西当然要用在学习上面）。所以这一期就推荐一款GIF编辑工具。</p><p>ps：以下的几个GIF都是用这个软件做出来的，大家可以感受一下。</p><p>这是一款轻便易用的GIF软件，完全免费，没有水印，并且开源，集GIF录屏、摄像头GIF录制、画板GIF录制以及GIF编辑四大功能于一体。GIF相关的制作编辑，这一款软件，完完全全足够。（下载地址见文末）</p><p>这款软件有便携版，完全不需要安装，而且是单文件版，软件大小仅仅4M，双击打开即可使用，几乎不会产生任何垃圾文件，可以把这款软件拷贝到U盘里，作为个人工具箱的一部分。</p><h2 id="一、四大功能"><a href="#一、四大功能" class="headerlink" title="一、四大功能"></a>一、四大功能</h2><p>录像机、摄像头、画板、编辑器</p><p>![<a href="https://cdn.impzy.cn/softwareImg/ScreenToGif/1.png]">https://cdn.impzy.cn/softwareImg/ScreenToGif/1.png]</a></p><h2 id="二、录像机"><a href="#二、录像机" class="headerlink" title="二、录像机"></a>二、录像机</h2><p>功能：自动贴合窗口部件、强调显示鼠标点击动作、自定义录制窗口大小。</p><p>录制出来的GIF文件大小也很合理，录制完毕后自动跳转到编辑器，可抽帧、调节画质和长宽、添加字幕和水印等。</p><p><img src="https://cdn.impzy.cn/softwareImg/ScreenToGif/2.gif" alt="录像机"></p><h2 id="三、画板"><a href="#三、画板" class="headerlink" title="三、画板"></a>三、画板</h2><p>自动录制画板笔记轨迹</p><p>拥有两种橡皮擦（一种点哪擦哪，另一种是擦除整个笔画），可更换字体颜色，曲化书写，让书写看起来更流畅美观。</p><p><img src="https://cdn.impzy.cn/softwareImg/ScreenToGif/3.gif" alt="画板"></p><h2 id="四、编辑器"><a href="#四、编辑器" class="headerlink" title="四、编辑器"></a>四、编辑器</h2><p>不多说，你想要的功能，里面都有，就看你自己能够挖掘多深了</p><p>还有更高深的玩法等着你去探索</p><p>![编辑器][5]</p><p>官方网址：<a href="https://www.screentogif.com/">https://www.screentogif.com</a></p><p>选择便携版下载</p><p>[5]:</p><p><a href="https://cdn.impzy.cn/softwareImg/ScreenToGif/4.png">https://cdn.impzy.cn/softwareImg/ScreenToGif/4.png</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;经过了将近一个月的疯狂复习，今天也终于考完了，考完了倒数第二门，最后一门13号考，趁这个空档期，出一期软件推荐。鉴于大家平时对GIF编辑的需求比较大，之前还有好几个朋友让我帮他们改GIF动图，相信做动态表情包绝对少不了一款优秀的GIF编辑工具（正经的，谁还做表情包，这种好用</summary>
      
    
    
    
    <category term="软件说" scheme="https://impzy.cn/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>打造专属的个人域名邮箱</title>
    <link href="https://impzy.cn/2020/12/31-00.html"/>
    <id>https://impzy.cn/2020/12/31-00.html</id>
    <published>2020-12-30T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>现在大家的主流邮箱都是使用163、QQ、Gmail、Outlook、Foxmail或者自己学校的edu.cn教育邮箱，但是各有各的优点和不足，163广告太多，QQ邮箱又显得不那么正式，Gmail、Outlook又是国外的邮箱，访问效果上很多时候不太理想，edu邮箱毕业会被收回然后换成校友邮箱，总之都不太尽人意。同时还有一个最大的问题，就是使用这些邮箱的人太多了，注册的时候很难注册到自己喜欢的用户名。</p><p>那么这里就有一个很好的解决方案——注册个人域名邮箱。比如我的个人邮箱：<a href="mailto:&#112;&#122;&#x79;&#x40;&#112;&#x7a;&#121;&#101;&#114;&#x2e;&#x63;&#111;&#x6d;">&#112;&#122;&#x79;&#x40;&#112;&#x7a;&#121;&#101;&#114;&#x2e;&#x63;&#111;&#x6d;</a>，看起来是不是很炫酷。</p><h2 id="二、需要准备的东西"><a href="#二、需要准备的东西" class="headerlink" title="二、需要准备的东西"></a>二、需要准备的东西</h2><h3 id="购买个人域名"><a href="#购买个人域名" class="headerlink" title="购买个人域名"></a>购买个人域名</h3><h4 id="1-什么是域名"><a href="#1-什么是域名" class="headerlink" title="1.什么是域名"></a>1.什么是域名</h4><p>简单地说，我们平时访问网站，为什么我们输入baidu.com就能访问百度，因为baidu.com这个域名是由百度购买的，百度拥有对这个域名的控制权，百度将这个域名解析到百度的服务器，我们输入baidu.com就能访问到百度了，再比如我的域名pzyer.com，我将它解析到了我的服务器，那么你们输入pzyer.com就能看到我的博客了。</p><p>这里我们还会使用腾讯的一个业务——腾讯企业邮，我们只需要购买一个属于自己的域名，然后把域名解析到腾讯企业邮给定的服务器，就能够制作个人专属域名邮箱了。</p><p>域名是采用按年付费的形式，根据域名的类型不同（常见域名类型有.com、.cn、.com.cn等等），一年几元到几十元不等，这里建议大家上<a href="https://promotion.aliyun.com/ntms/act/domainbrand.html?source=5176.11533457&userCode=0ett9gxr">阿里云万网</a>购买域名，新用户首年是有优惠的，同时建议购买.top的域名，相对来说价格比较便宜。</p><p><img src="https://cdn.pzyer.com/articleImg/domain-email/1.png" alt="阿里云万网新用户优惠"></p><h4 id="2-购买域名的注意事项："><a href="#2-购买域名的注意事项：" class="headerlink" title="2.购买域名的注意事项："></a>2.购买域名的注意事项：</h4><p><strong>不要购买溢价域名</strong></p><p>通常只有两三个字符的域名会溢价，价格会高到承受不起，因为现在的短字符域名已经成为了一种稀有资源了，在十多年前，很多人看到了域名这个东西的潜在价值，购买了很多短字符或者具有特殊意义的域名，现在市场价格已经高达几百万，小米的域名mi.com就花了360万美元。</p><p><strong>域名续费问题</strong></p><p>一些类型的域名购买首年会很便宜，但是续费价格会高好几倍，购买的时候要注意标明的续费价格。</p><p><strong>关于强迫症选手</strong></p><p>域名这个东西，如果没有决定好一直用下去，建议不要购买太久，虽然购买的越久会越优惠，但是有可能用一段时间后你突然想到一个更好的域名名称，而恰好又没有被人注册，那么这个时候就会很难受，我购买域名的时候就是这样，期间更换了一次域名，一般购买一年就好了，一年之后记得及时续费。</p><h2 id="三、开通腾讯企业邮"><a href="#三、开通腾讯企业邮" class="headerlink" title="三、开通腾讯企业邮"></a>三、开通腾讯企业邮</h2><p>腾讯企业邮：<a href="https://exmail.qq.com/">https://exmail.qq.com/</a></p><h3 id="1-选择开通基础版"><a href="#1-选择开通基础版" class="headerlink" title="1.选择开通基础版"></a>1.选择开通基础版</h3><p>基础版是免费的，里面的功能已经足够我们使用了。这里要说明的是，腾讯企业邮开通的时候会连带着自动开通一个企业微信，两者是相互结合着使用的，同时手机上下一个企业微信，方便管理邮箱的时候扫码登录使用（后期不需要管理的时候可以卸载企业微信）。<br>然后按着里面需要的东西，一步一步跟着做就好了。</p><h3 id="2-绑定域名到企业邮"><a href="#2-绑定域名到企业邮" class="headerlink" title="2.绑定域名到企业邮"></a>2.绑定域名到企业邮</h3><p>登录到企业邮，然后选择通讯录——邮箱服务，</p><h3 id="3-将域名解析到腾企业邮"><a href="#3-将域名解析到腾企业邮" class="headerlink" title="3.将域名解析到腾企业邮"></a>3.将域名解析到腾企业邮</h3><p>这一步，也可以参见<a href="https://open.work.weixin.qq.com/help?person_id=1&doc_id=198&helpType=exmail">腾讯企业邮官方解析教程</a></p><h3 id="4-自定义"><a href="#4-自定义" class="headerlink" title="4.自定义"></a>4.自定义</h3><p>可以给家人或者朋友也分配一个邮箱账号</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;p&gt;现在大家的主流邮箱都是使用163、QQ、Gmail、Outlook、Foxmail或者自己学校的edu.cn教育邮箱，但是各</summary>
      
    
    
    
    <category term="硬核教程" scheme="https://impzy.cn/categories/%E7%A1%AC%E6%A0%B8%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>用创建桌面快捷方式的方法快速修改HOSTS</title>
    <link href="https://impzy.cn/2020/03/18-00.html"/>
    <id>https://impzy.cn/2020/03/18-00.html</id>
    <published>2020-03-17T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<p>通常在修改HOSTS文件的时候，授权编辑器管理员权限是一件比较麻烦的事，而且每次修改的时候都要去授权管理员权限，实在是很麻烦，这里给大家介绍一种能够快速便捷修改HOST文件的方法</p><p>那就是通过建立桌面快捷方式，并在双击打开时让快捷方式以管理员身份运行<br>该方案的灵感也是来源于火绒安全软件，里面有一个修改HOST文件的小插件，其实它就是在桌面建立快捷方式来达到目的的</p><h2 id="1-新建桌面快捷方式"><a href="#1-新建桌面快捷方式" class="headerlink" title="1.新建桌面快捷方式"></a>1.新建桌面快捷方式</h2><p>对象的位置，输入：<br>C:\WINDOWS\system32\notepad.exe C:\WINDOWS\system32\drivers\etc\hosts</p><p>快捷方式名称自定义</p><h2 id="2-授予快捷方式管理员权限"><a href="#2-授予快捷方式管理员权限" class="headerlink" title="2.授予快捷方式管理员权限"></a>2.授予快捷方式管理员权限</h2><p>右键单击快捷方式，查看属性，选择高级，勾选用管理员身份运行</p><p>确认后即创建成功</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通常在修改HOSTS文件的时候，授权编辑器管理员权限是一件比较麻烦的事，而且每次修改的时候都要去授权管理员权限，实在是很麻烦，这里给大家介绍一种能够快速便捷修改HOST文件的方法&lt;/p&gt;
&lt;p&gt;那就是通过建立桌面快捷方式，并在双击打开时让快捷方式以管理员身份运行&lt;br&gt;该方</summary>
      
    
    
    
    <category term="Windows" scheme="https://impzy.cn/categories/Windows/"/>
    
    
  </entry>
  
  <entry>
    <title>Excel常见函数</title>
    <link href="https://impzy.cn/2020/03/01-00.html"/>
    <id>https://impzy.cn/2020/03/01-00.html</id>
    <published>2020-02-29T16:00:00.000Z</published>
    <updated>2025-06-09T14:35:30.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数的基本使用方法"><a href="#函数的基本使用方法" class="headerlink" title="函数的基本使用方法"></a>函数的基本使用方法</h2><p>方法一：直接在单元格中输入“&#x3D;”，后接公式</p><p>方法二：在“编辑栏”中输入公式</p><h2 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h2><h3 id="1-绝对值函数"><a href="#1-绝对值函数" class="headerlink" title="1.绝对值函数"></a>1.绝对值函数</h3><p>ABS(Number)</p><p>➤Number为数值或者单元格</p><p>例：&#x3D;ABS(A1)，求A1单元格中数值的绝对值</p><h3 id="2-最大值函数"><a href="#2-最大值函数" class="headerlink" title="2.最大值函数"></a>2.最大值函数</h3><p>MAX(Number1, Number2, …)</p><p>➤Number为数值或者单元格</p><p>➤参数Number至少有一个，最多255个</p><p>➤如果是多个单元格，可以使用（A1:G5）的形式</p><p>例：&#x3D;MAX（A1:G5），求以A1-G5为对角线的表格中的单元格的数值最大值</p><p>➤单元格和数字可以混用</p><p>例：&#x3D;MAX（A2:A4, 4, 5, 7），求A2:A4，4，5，7中的最大数值</p><h3 id="3-最小值函数"><a href="#3-最小值函数" class="headerlink" title="3.最小值函数"></a>3.最小值函数</h3><p>MIN(Number1, Number2, …)</p><h3 id="4-四舍五入函数"><a href="#4-四舍五入函数" class="headerlink" title="4.四舍五入函数"></a>4.四舍五入函数</h3><p>ROUND(Number, Num_digits)</p><p>➤Num_digits为保留的小数位数</p><p>例：&#x3D;ROUND(227.568,2)，返回结果为227.57</p><h3 id="5-取整函数"><a href="#5-取整函数" class="headerlink" title="5.取整函数"></a>5.取整函数</h3><p>TRUNC(Number, [Num_digits])</p><p>➤功能：截取日期或数字，将参数Number的小数部分截去，返回整数</p><p>➤参数Num_digits为取精度数，默认为0</p><p>例：&#x3D;TRUNC(-227.568)，返回结果为-227</p><h3 id="6-向下取整函数"><a href="#6-向下取整函数" class="headerlink" title="6.向下取整函数"></a>6.向下取整函数</h3><p>INT(Number)</p><p>➤功能：将参数Number向下舍入到最接近的整数</p><p>例：&#x3D;INT(227.568)，返回结果为227</p><p>&#x3D;INT(-227.568)，返回结果为-228</p><h3 id="7-求和函数"><a href="#7-求和函数" class="headerlink" title="7.求和函数"></a>7.求和函数</h3><p>①一般求和函数</p><p>SUM(Number1, [Number2]…)</p><p>➤参数可以为具体的数值、引用的单元格（区域）、数组、公式或者另一个函数的结果</p><p>➤如果参数为数组或者引用，只有其中的数字可以被计算，空白单元格、逻辑值、文本或者错误值将被忽略</p><p>②条件求和函数</p><p>SUMIF(Range,Criteria, [Sum_range])</p><p>➤Range：必需参数。条件区域。条件判断的区域范围。</p><p>➤Criteria：必需参数。求和的条件。</p><p>➤Sum_range：可选参数。实际求和区域。如果Sum_range参数被省略，则会对在Range参数中指定的单元格求和。</p><p>注意：在函数中，任何文本条件或者任何含有逻辑或数学符号的条件都要使用双引号；如果条件为数字，则无需使用双引号。</p><p>③多条件求和函数</p><p>SUMIFS(Sum_range, Criteria_range1, Criteria1, [Criteria_range2, Criteria2])</p><p>➤功能：对指定单元格区域中符合多组条件的单元格求和。</p><p>➤Sum_range：实际求和区域</p><p>➤Criteria_range1：第一组的条件区域</p><p>➤Criteria1：第一组的条件</p><p>例：&#x3D;SUMIFS(A2:A10, B2:B10, “&gt;0”, C2:C10, “&lt;5”)，表示对A2:A10区域中符合以下条件的单元格求和：B2:B10中的相应数值大于0且C2:C10中的相应数值小于5。</p><p>④积和函数</p><p>SUMPRODUCT(Array1, Array2, Array3, …)</p><p>➤功能：先计算出各个数组或区域中位置相同的元素之间的乘积，然后再计算出他们的和</p><p>➤参数可以是数值、逻辑值或作为文本输入的数字的数组常量，或者包含这些值的单元格区域，空白单元格通常被视为0</p><p>➤数组参数必须具有相同的维数</p><h3 id="8-平均值函数"><a href="#8-平均值函数" class="headerlink" title="8.平均值函数"></a>8.平均值函数</h3><p>①平均值函数</p><p>AVERAGE(Number1, [Number2], …)</p><p>➤如果有0值单元格，则计算在内，如果有空白或字符单元格，则不计算在内</p><p>②条件平均值函数</p><p>AVERAGEIF(Range, Criteria, [Average_range])</p><p>➤功能：对指定单元格区域中符合一组条件的单元格求平均值</p><p>➤Range：条件区域</p><p>➤Criteria：求平均值的条件</p><p>➤Average_range：求平均值的实际区域</p><p>③多条件平均值函数</p><p>AVERAGEIFS(Average_range, Criteria_range1, Criteria1, [Criteria_range2, Criteria2], …)</p><h3 id="9-计数函数"><a href="#9-计数函数" class="headerlink" title="9.计数函数"></a>9.计数函数</h3><p>①一般计数函数</p><p>COUNT(Value1, [Value2], …)</p><p>➤功能：统计指定区域包含数字的单元格的个数</p><p>②计数函数</p><p>COUNTA(Value1, [Value2], …)</p><p>➤功能：统计指定区域不为空的单元格的个数，即可以对包含任何类型信息的单元格进行计数</p><p>③条件计数函数</p><p>COUNTIF(Range, Criteria)</p><p>➤功能：统计指定单元格区域中符合单个条件的单元格个数</p><p>➤Range：计数的单元格区域</p><p>④多条件计数函数</p><p>COUNTIFS(Criteria_range1, Criteria1, [Criteria_range2, Criteria2], …)</p><h3 id="10-逻辑判断IF函数"><a href="#10-逻辑判断IF函数" class="headerlink" title="10.逻辑判断IF函数"></a>10.逻辑判断IF函数</h3><p>IF(Logical_test, [Value_if_true], [Value_if_false])</p><p>➤功能：如果指定条件的计算结果为TRUE，IF函数返回一个值，如果为FALSE，则返回另一个值。</p><p>➤Logical：判断条件</p><p>➤Value_if_true&#x2F;false：计算结果为true&#x2F;false时的返回内容，如果忽略则返回TRUE&#x2F;FALSE</p><h3 id="11-垂直查询函数"><a href="#11-垂直查询函数" class="headerlink" title="11.垂直查询函数"></a>11.垂直查询函数</h3><p>VLOOKUP(Lookup_value,Table_array,Col_index_num,[Range_lookup])</p><p>➤功能：搜索指定的单元格区域的第一列，然后返回该区域相同一行上任何指定单元格中的值</p><p>➤Lookup_value：必需参数。查找目标，即要在表格或区域的第一列中搜索到的值</p><p>➤Table_array：必需参数。查找范围，即要查找的数据所在的单元格区域</p><p>➤Col_index_num：必需参数。返回值的列数，即最终返回数据所在的列号</p><p>➤Range_lookup：可选参数。为一逻辑值，决定查找精确匹配值还是近似匹配值。如果为TRUE或者省略则返回近似匹配值，也就是如果找不到精确匹配值，则返回小于Lookup_value的最大数值。如果为FALSE，则返回精确匹配值。如果找不到精确匹配值，则返回错误值#N&#x2F;A</p><p>注意：要查找的值必须位于在table_array参数中指定的单元格区域的第一列中</p><h3 id="12-排位函数"><a href="#12-排位函数" class="headerlink" title="12.排位函数"></a>12.排位函数</h3><p>RANK.EQ(Number, ref, [order])和RANK.AVG(Number, ref, [order])</p><p>➤功能：返回一个数值在指定数值列表中的排位。如果多个值具有相同排位，使用函数RANK.AVG将返回平均排位，使用函数RANK.EQ将返回实际排位。</p><p>➤Number：需要排位的数值</p><p>➤Ref：要查找的数值列表所在的单元格区域</p><p>➤Order：指定数值列表的排序方式（如果order为0或者忽略，则按照降序排名，如果非0，则按照升序排名）</p><h3 id="13-时间日期函数"><a href="#13-时间日期函数" class="headerlink" title="13.时间日期函数"></a>13.时间日期函数</h3><p>①当前日期和时间函数</p><p>NOW()</p><p>②当前日期函数</p><p>TODAY()</p><p>③年份函数</p><p>YEAR(Serial_number)</p><p>➤功能：返回指定日期或引用单元格中对应的年份。返回值为1900到9999之间的整数</p><p>➤公式所在的单元格不能是日期格式</p><p>④月份函数</p><p>MONTH(Serial_number)</p><h3 id="14-文本类函数"><a href="#14-文本类函数" class="headerlink" title="14.文本类函数"></a>14.文本类函数</h3><p>①文本合并函数</p><p>CONCATENATE(Text1, [Text2], …)</p><p>②截取字符串函数</p><p>MID(Text, Start_num, Num_chars)</p><p>➤功能：从文本字符串的指定位置开始，截取指定数目的字符</p><p>➤Text：要截取的文本字符串</p><p>➤Start_num：指定的截取起始位置</p><p>➤Num_chars：指定的截取字符个数</p><p>③左侧截取字符串函数</p><p>LEFT(Text, [Num_chars])</p><p>➤功能：从文本字符串的最左边开始，截取指定数目的字符</p><p>➤Num_chars：要截取的字符个数。必须≥0。如果省略，默认值为1</p><p>④右侧截取字符串函数</p><p>RIGHT(Text, [Num_chars])</p><p>⑤删除空格函数</p><p>TRIM(Text)</p><p>➤功能：删除指定文本或区域中的空格</p><p>⑥字符个数函数</p><p>LEN(Text)</p><p>➤功能：统计并返回指定文本字符串中的字符个数</p><p>➤注意：空格也要作为字符进行统计</p><h3 id="15-查找函数"><a href="#15-查找函数" class="headerlink" title="15.查找函数"></a>15.查找函数</h3><p>SEARCH(find_text, within_text, [start_num])</p><p>➤功能：返回第一个文本字符串在第二个文本字符串中的起始位置编号，该编号从第二个文本字符串的第一个字符算起。</p><p>➤如果找不到findt_text的值，则#VALUE!错误值</p><p>➤find_text：要查找的文本</p><p>➤within_text：要在其中搜索find_text参数的值的文本</p><p>➤start_num：within_text参数中从之开始搜索的字符编号，省略时其值为1</p><p>➤注意：SEARCH函数不区分大小写</p><h3 id="16-IFERROR函数"><a href="#16-IFERROR函数" class="headerlink" title="16.IFERROR函数"></a>16.IFERROR函数</h3><p>IFERROR(value, value_if_error)</p><p>➤功能：捕获和处理公式中的错误。如果公式的计算结果为错误值，则返回指定的值（value_if_error），否则将返回公式的结果</p><p>➤value：检查是否存在错误的参数</p><p>➤value_if_error公式计算错误时返回的值</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;函数的基本使用方法&quot;&gt;&lt;a href=&quot;#函数的基本使用方法&quot; class=&quot;headerlink&quot; title=&quot;函数的基本使用方法&quot;&gt;&lt;/a&gt;函数的基本使用方法&lt;/h2&gt;&lt;p&gt;方法一：直接在单元格中输入“&amp;#x3D;”，后接公式&lt;/p&gt;
&lt;p&gt;方法二：在“编辑</summary>
      
    
    
    
    <category term="Office" scheme="https://impzy.cn/categories/Office/"/>
    
    
  </entry>
  
</feed>
